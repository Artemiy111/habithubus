import { db } from "./index"
import { users, userSettings, habits, completions } from "./schema"
import { hashPassword } from "../auth/utils"

export async function seed() {
  console.log("üå± –ù–∞—á–∞–ª–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")

  // –û—á–∏—Å—Ç–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
  await db.delete(completions)
  await db.delete(habits)
  await db.delete(userSettings)
  await db.delete(users)

  console.log("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—á–∏—â–µ–Ω–∞")

  // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const hashedPassword = await hashPassword("password123")

  const [user] = await db
    .insert(users)
    .values({
      email: "test@example.com",
      name: "–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
      password: hashedPassword,
    })
    .returning()

  console.log(`‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user.email}`)

  // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  await db.insert(userSettings).values({
    userId: user.id,
    theme: "system",
    primaryColor: "blue",
    enableNotifications: false,
    notificationTime: "20:00",
    showConfetti: true,
    shareProgress: false,
    reminderFrequency: "daily",
  })

  console.log("‚úÖ –°–æ–∑–¥–∞–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

  // –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–≤—ã—á–µ–∫
  const [habit1] = await db
    .insert(habits)
    .values({
      userId: user.id,
      name: "–£—Ç—Ä–µ–Ω–Ω—è—è –∑–∞—Ä—è–¥–∫–∞",
      description: "15 –º–∏–Ω—É—Ç —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –∫–∞–∂–¥–æ–µ —É—Ç—Ä–æ",
      frequency: "daily",
    })
    .returning()

  const [habit2] = await db
    .insert(habits)
    .values({
      userId: user.id,
      name: "–ß—Ç–µ–Ω–∏–µ –∫–Ω–∏–≥–∏",
      description: "–ß–∏—Ç–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 30 –º–∏–Ω—É—Ç",
      frequency: "daily",
    })
    .returning()

  const [habit3] = await db
    .insert(habits)
    .values({
      userId: user.id,
      name: "–£–±–æ—Ä–∫–∞ –¥–æ–º–∞",
      description: "–ì–µ–Ω–µ—Ä–∞–ª—å–Ω–∞—è —É–±–æ—Ä–∫–∞",
      frequency: "weekly",
    })
    .returning()

  console.log("‚úÖ –°–æ–∑–¥–∞–Ω—ã –ø—Ä–∏–≤—ã—á–∫–∏")

  // –°–æ–∑–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–π
  const today = new Date().toISOString().split("T")[0]
  const yesterday = new Date(Date.now() - 86400000).toISOString().split("T")[0]

  await db.insert(completions).values([
    { habitId: habit1.id, date: today, completed: true },
    { habitId: habit2.id, date: today, completed: true },
    { habitId: habit1.id, date: yesterday, completed: true },
  ])

  console.log("‚úÖ –°–æ–∑–¥–∞–Ω—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–∏–≤—ã—á–µ–∫")
  console.log("üéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞!")
}

// –ó–∞–ø—É—Å–∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  seed()
    .then(() => process.exit(0))
    .catch((error) => {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:", error)
      process.exit(1)
    })
}

